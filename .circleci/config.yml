version: 2.1

orbs:
  slack: circleci/slack@4.1.1

jobs:
  build:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run: &setup_slack_env
          name: Prepare Slack environment
          command: |
            message=$(git show -s --pretty='format:%s' "${CIRCLE_SHA1}" | sed 's/^/> /g' | sed -z 's/\n/\\n/g')
            author=$(git show -s --pretty='format:%an' "${CIRCLE_SHA1}")
            echo "export COMMIT_MESSAGE='$message'" >> $BASH_ENV
            echo "export COMMIT_AUTHOR='$author'" >> $BASH_ENV
      - run:
          command: |
            exit 1
  test:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run: *setup_slack_env
      - run:
          command: |
            exit 1
  lint:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run: *setup_slack_env
      - run:
          command: |
            exit 1
  integration-test:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run: *setup_slack_env
      - run:
          command: |
            exit 1
  notify-success:
    docker:
    - image: cimg/base:stable

    steps:
    - checkout
    - run: *setup_slack_env
    - slack/notify:
        custom: |
          {
            "text": "",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "✅ *Success* #${CIRCLE_BUILD_NUM} `${CIRCLE_PROJECT_REPONAME}` on `${CIRCLE_BRANCH}` by ${COMMIT_AUTHOR}:\n${COMMIT_MESSAGE}"
                }
              },
              {
                "type": "actions",
                "elements": [
                  {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "View Job"
                    },
                    "url": "${CIRCLE_BUILD_URL}"
                  }
                ]
              }
            ]
          }
        event: always
workflows:
  build-and-test:
    jobs:
    - build:
        context: [slack]
        post-steps: &failure_post_steps
        - slack/notify:
            custom: &failure_template |
              {
                "text": "",
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "⚠️ *Failure* #${CIRCLE_BUILD_NUM} `${CIRCLE_PROJECT_REPONAME}` on `${CIRCLE_BRANCH}` by ${COMMIT_AUTHOR}:\n${COMMIT_MESSAGE}"
                    }
                  },
                  {
                    "type": "actions",
                    "elements": [
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "View Job"
                        },
                        "url": "${CIRCLE_BUILD_URL}"
                      }
                    ]
                  }
                ]
              }
            event: fail
    - test:
        context: SLACK_SECRETS
        post-steps: *failure_post_steps
    - lint:
        context: SLACK_SECRETS
        post-steps: *failure_post_steps
    - integration-test:
        context: SLACK_SECRETS
        post-steps: *failure_post_steps
    - notify-success:
        context: SLACK_SECRETS
        requires: [build, lint, test, integration-test]
